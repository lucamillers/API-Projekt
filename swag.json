{
  "openapi": "3.0.1",
  "info": {
    "title": "API-Projekt",
    "description": "Schulprojekt der IFA01, LF9 (Herr Wichmann) zur Erstellung einer Rest-API",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "https://127.0.0.1/"
    },
    {
      "url": "http://127.0.0.1/"
    }
  ],
  "paths": {
    "/todo-list/{list_id}": {
      "get": {
        "summary": "Gets a list",
        "description": "Returns all entries of a to-do-list",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "ID of list",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodoList"
                }
              }
            }
          },
          "404": {
            "description": "invalid list id",
            "content": {}
          }
        }
      },
      "delete": {
        "summary": "Deletes a list",
        "description": "Deletes all entries of a to-do-list",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "ID of list",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodoList"
                }
              }
            }
          },
          "404": {
            "description": "invalid list id",
            "content": {}
          }
        }
      }
    },
    "/todo-list/createList": {
      "post": {
        "summary": "Add a new list",
        "description": "Creates a new list to be filled with entries",
        "operationId": "createList",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TodoList"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodoList"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/todo-list/{list_id}/createEntry": {
      "post": {
        "summary": "Adds a new list entry",
        "description": "Creates a new entry in a given list",
        "operationId": "createEntry",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "ID of list to add entry to",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Create a new entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TodoEntry"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodoEntry"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/todo-list/{list_id}/{entry_id}": {
      "patch": {
        "summary": "Updates an entry",
        "description": "Updates an existing entry in a given list",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "ID of list to update entry in",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "entry_id",
            "in": "path",
            "description": "ID of entry to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Updates an entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TodoEntry"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodoEntry"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "summary": "Deletes an entry",
        "description": "Deletes an entry of a to-do-list",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "ID of list to delete entry in",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "entry_id",
            "in": "path",
            "description": "ID of entry to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodoEntry"
                }
              }
            }
          },
          "404": {
            "description": "invalid list id",
            "content": {}
          }
        }
      }
    },
    "/users/{users_id}": {
      "get": {
        "summary": "Shows all users",
        "description": "Returns a list of all users",
        "parameters": [
          {
            "name": "users_id",
            "in": "path",
            "description": "ID of users list",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/users"
                }
              }
            }
          },
          "404": {
            "description": "invalid list id",
            "content": {}
          }
        }
      }
    },
    "/users/createUser": {
      "put": {
        "summary": "Add a new user",
        "description": "Creates a new user",
        "operationId": "createUser",
        "requestBody": {
          "description": "Create a new user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/users/{user_id}": {
      "delete": {
        "summary": "Deletes a user",
        "description": "Deletes a user via user ID",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of user",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "404": {
            "description": "invalid user id",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "TodoList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TodoEntry"
            }
          }
        }
      },
      "TodoEntry": {
        "type": "object",
        "properties": {
          "entry_id": {
            "type": "integer",
            "format": "int32"
          },
          "entryName": {
            "type": "string"
          }
        }
      },
      "users": {
        "type": "object",
        "properties": {
          "users_id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "users_arr": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/user"
            }
          }
        }
      },
      "user": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "integer",
            "format": "int32"
          },
          "userName": {
            "type": "string"
          }
        }
      }
    }
  }
}
